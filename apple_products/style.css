@import url("https://fonts.googleapis.com/css2?family=Work+Sans:wght@100;200;300;400;500;600;700;800;900&display=swap");

/* Common styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    list-style-type: none;
    outline: none;
    text-decoration: none;
    font-family: "Work Sans", sans-serif;
}

/* 1rem = 16px (font size of HTML element), so wanna change 1rem= 10px */
html {
    font-size: 62.5%;
}

/* CSS variable for colours, bcs use frequently, better to use CSS variables, general can be global or local scope. In this case, need global so can be accesed thru entire document, local=inside selector. To create global scope need to declare inside root selector, matches documents with elements */
:root {
    --primary-colour: #6edae6;
    --white-colour: #fff;
    --black-colour: #000;
}

.center {
    display: flex;
    justify-content: center;
    align-items: center;
}
/* End of Common styles */

/* Section 1 */
.section-1 {
    width: 100%;
    height: 100vh;
    background-color: var(--primary-colour);
    display: flex;
    align-items: center;
    justify-content: space-evenly;
    clip-path: polygon(100% 0, 100% 95%, 38% 100%, 0 100%, 0 0);
    position: relative;
}

/* Logo */
.logo {
    position: absolute;
    top: 3rem;
    left: 3rem;
}

.logo i {
    font-size: 10rem;
    color: rgba(0, 0, 0, 0.8);
}
/* End of logo */

/* Navbar */
.navbar {
    position: absolute;
    top: 3rem;
    right: 10%;
}

.navbar-link {
    font-size: 2rem;
    display: inline-block;
    /* when use inline-block, then can assign height, margin, padding. They would still behave like in-line elements, they wont take up entire width inside of container, wont be placed on diff lines*/
    margin: 0 3rem;
    color: var(--black-colour);
    transition: transform 0.5s;
}

.navbar-link:hover {
    transform: scale(1.5);
}
/* End of Navbar */

/* Banner */
.section-1-banner {
    flex-direction: column;
}

.section-1-banner h1 {
    font-size: 13rem;
    font-weight: 300;
    text-transform: uppercase;
    letter-spacing: 0.5rem;
}

.section-1-banner p {
    font-size: 4rem;
    font-weight: 400;
    letter-spacing: 0.1rem;
    margin: 6rem 0 4rem 0;
}

.section-1-banner span {
    font-size: 3rem;
    margin-bottom: 5rem;
}

.section-1-banner button {
    padding: 2rem 4rem;
    font-size: 2rem;
    background-color: var(--black-colour);
    color: var(--primary-colour);
    font-weight: 400;
    letter-spacing: 0.1rem;
    border: none;
    border-radius: 0.5rem;
    cursor: pointer;
    clip-path: polygon(
        50% 0%,
        81% 5%,
        100% 0,
        100% 100%,
        80% 95%,
        50% 100%,
        20% 95%,
        0 100%,
        0 0,
        23% 5%
    );
    transition: clip-path 0.5s;
}

.section-1-banner button:hover {
    clip-path: polygon(
        40% 15%,
        77% 15%,
        100% 10%,
        100% 90%,
        75% 85%,
        40% 85%,
        30% 100%,
        0 50%,
        0 50%,
        30% 0
    );
}
/* End of Banner */

/* Cube */
.cube-wrapper {
    perspective: 100rem;
    /* for far away the 3d obj from user:100rem */
}

.cube {
    width: 30rem;
    height: 55rem;
    transform-style: preserve-3d;
    /* it will share 3d elements to its child elements */
    /* transform: rotateY(91deg); */
    /* move the cube up so hv space w/ controller */
    position: relative;
    top: -2rem;
    transition: transform 0.5s;
}

.front-side,
.back-side {
    width: 100%;
    height: 100%;
    background-color: #fee;
    position: absolute;
    transform-style: preserve-3d;
    box-shadow: inset 0.1rem 0.1rem 0.1rem #ddd,
        inset -0.1rem -0.1rem 0.1rem #ddd;
    /* for shadow on side */
}

.front-side {
    padding: 2.5rem;
    transform: translateZ(5rem);
}

.front-side::before,
.front-side::after {
    content: "";
    width: 100%;
    height: 10rem;
    background-color: #fee;
    /* not visible so, */
    position: absolute;
    box-shadow: inset 0.1rem 0.1rem 0.1rem #ddd, inset -0.1rem -0.1rem 0.1rem #ddd;
}

.front-side::before {
    top: 0;
    left: 0;
    /* still not visible, bcs 3d not shared for psuedo element, preserve 3d at parent element cc front back side*/
    transform: rotateX(-90deg);
    transform-origin: top;
}

.front-side::after {
    bottom: 0;
    left: 0;
    transform: rotateX(90deg);
    transform-origin: bottom;
}

.front-side img {
    width: 100%;
    height: 100%;
    object-fit: contain;
}

.back-side {
    transform: translateZ(-5rem);
}

.back-side::before,
.back-side::after {
    content: "iPhone";
    width: 10rem;
    height: 100%;
    background-color: #fee;
    position: absolute;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 2rem;
    font-weight: 300;
    color: #ec1919;
}

.back-side::before {
    top: 0;
    left: 0;
    transform: rotateY(-90deg);
    transform-origin: left;
}

.back-side::after {
    top: 0;
    right: 0;
    transform: rotateY(90deg);
    transform-origin: right;
}

.back-side i {
    font-size: 12rem;
    color: var(--primary-colour);
    text-shadow: 0.1rem 0.1rem 0.2rem #aaa, -0.1rem -0.1rem 0.2rem #aaa;
    /* multi-level shadow, this right, left shadow */
    /* transform: rotateY(180deg); */
    transform: scaleX(-1);
}

/* Controls */
.controls {
    position: absolute;
    /* bcs cube-wrapper has flex, no need relative */
    bottom: -15rem;
    left: 50%;
    transform: translateX(-50%);
    width: 10rem;
    height: 10rem;
    background-color: rgba(0,0,0,0.9);
    border-radius: 50%;
    border: 1rem solid rgba(0, 0, 0, 0.8);
}

.controls a {
    position: absolute;
}

/* set arrow icon, link element seperately */
.controls a:nth-child(1) {
    top: 0;
    left: 50%;
    transform: translateX(-50%);
}

.controls a:nth-child(2) {
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
}

.controls a:nth-child(3) {
    top: 50%;
    left: 0%;
    transform: translateY(-50%);
}

.controls a:nth-child(4) {
    top: 50%;
    right: 0%;
    transform: translateY(-50%);
}

.controls a:nth-child(5) {
    top: 10%;
    right: 10%;
    transform: rotate(45deg);
}

.controls a:nth-child(6) {
    bottom: 10%;
    left: 10%;
    transform: rotate(45deg);
}

.controls i {
    font-size: 1.5rem;
    color: var(--primary-colour);
    opacity: 0.5;
    transition: opacity 0.5s;
}

.controls a:hover i{
    opacity: 1;
}

/* End of Controls */
/* End of Cube */

/* Slideshow */
.slideshow {
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
}
/* images dont display bcs not give width & height yet  */
.slideshow div {
    width: 100%;
    height: 100%;
    position: absolute;
    /* images on top of each other */
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    opacity: 0;
    /* hide, change slide */
    transition: opacity 5s;
}

.slideshow div.change {
    opacity: 1;
}
/* End of Slideshow */

/* End of Section 1 */
